////
/// @group divider
////


/// Boolean if the base classes for divider borders should be included.
/// @type Boolean
$divider-inc-borders: true !default;

/// The height for a Divider
/// @type Number
$divider-height: 1px !default;

/// Includes the Divider styles
///
/// @example scss - Example Usage SCSS
///   @include boldrui-divider;
///
/// @param {Boolean} light-theme [$boldrui-light-theme] - Boolean if using the light theme.
@mixin boldrui-divider($light-theme: $boldrui-light-theme, $include-borders: $divider-inc-borders) {
  .#{$boldr-ns}divider {
    background: get-color('divider', $light-theme);
    border: 0;
    content: '';
    display: block;
    height: $divider-height;
    margin: 0;
  }

  .#{$boldr-ns}divider__vertical {
    height: 100%;
    width: $divider-height;
  }

  .#{$boldr-ns}divider__inset {
    margin-left: 40px;
  }

  @if $include-borders {
    @include boldrui-divider-borders($light-theme);
  }
}

/// Includes the styles and class names for creating a divider through
/// the border property. This will create the following class names:
///
/// - boldrui-divider-border
///   - the base class that applies the color and border style.
/// - boldrui-divider-border__top
///   - only includes a border above the element.
/// - boldrui-divider-border__right
///   - only includes a border to the right of the element.
/// - boldrui-divider-border__bottom
///   - only includes a border below the element.
/// - boldrui-divider-border__left
///   - only includes a border to the left of the element.
///
/// @example scss - Example Usage SCSS
///   @include boldrui-divider-borders;
///
/// @param {Boolean} light-theme [$boldrui-light-theme] - Boolean if the borders should
///     be styled for the light theme.
/// @see {Mixin} boldrui-theme-divider-borders
@mixin boldrui-divider-borders($light-theme: $boldrui-light-theme) {
  .#{$boldr-ns}divider-border {
    border-color: get-color('divider', $light-theme);
    border-style: solid;
    border-width: 0;
  }

  .#{$boldr-ns}divider-border__top {
    border-top-width: 1px;
  }

  .#{$boldr-ns}divider-border__right {
    border-right-width: 1px;
  }

  .#{$boldr-ns}divider-border__bottom {
    border-bottom-width: 1px;
  }

  .#{$boldr-ns}divider-border__left {
    border-left-width: 1px;
  }
}

/// Updates the background color of dividers ONLY if the `$light-theme` does
/// not equal the `$boldrui-light-theme`.
///
/// @example scss - Example Usage SCS
///   @include boldrui-theme-divider;
///
/// @param {Boolean} light-theme [$boldrui-light-theme] - Boolean if using the light theme.
/// @group dividers, themes
@mixin boldrui-theme-divider($light-theme: $boldrui-light-theme, $include-borders: $divider-inc-borders) {
  @if $light-theme != $boldrui-light-theme {
    .#{$boldr-ns}divider {
      background: get-color('divider', $light-theme);
    }
  }

  @if $include-borders {
    @include boldrui-theme-divider-borders($light-theme);
  }
}

/// Themes only the divider borders if the `$light-theme` does not equal the `$boldrui-light-theme`.
///
/// @example scss - Example Usage SCSS
///   @include boldrui-theme-divider-borders(!$boldrui-light-theme);
///
/// @param {Boolean} light-theme [$boldrui-light-theme] - Boolean if using the light theme.
/// @group dividers, themes
@mixin boldrui-theme-divider-borders($light-theme: $boldrui-light-theme) {
  @if $light-theme != $boldrui-light-theme {
    .#{$boldr-ns}divider-border {
      border-color: get-color('divider', $light-theme);
    }
  }
}
